###########################################Aliases################################
# Utils
alias 'l'='eza --icons --group-directories-first -la -gh'
alias 'ls'='eza --icons --group-directories-first -a'
alias 'c'='clear'
alias 'q'='exit'
alias 'root'='sudo -i'
alias '..'='cd ..'
alias '...'='cd ../../'
alias '....'='cd ../../../'
alias '//'='echo "blyattttt"'
alias 'grep'='grep --color=auto'
alias 'egrep'='egrep --color=auto'
alias 'fgrep'='fgrep --color=auto'
# alias 'mkdir'='mkdir -pv'                   # NOW A FUNCTION
alias 'cp'="cp -i"                          # confirm before overwriting something
alias 'df'='df -h'                          # human-readable sizes
alias 'free'='free -m'                      # show sizes in MB
alias 'pr'='cd "$OLDPWD"'
alias 'rm'='trash-put'
#alias sudo='sudo '
alias extip='curl -sS https://www.daveeddy.com/ip'

#alias "pls"="sudo !!"

# Conditional aliases
# Checking if bat binary is called bat or batcat
if command -v bat >/dev/null 2>&1
then
  alias 'cat'='bat'
elif
  command -v batcat >/dev/null 2>&1
then
  alias 'cat'='batcat'
fi
# docker compose
if command -v docker compose >/dev/null 2>&1
then
  alias 'docker-compose'='docker compose'
fi


# Applications
#alias 'btop'="btop --utf-force"
alias 'v'='nvim'
alias 'vi'='nvim'
alias 'svi'='sudoedit'
alias 'ping'='ping -c 5'
#alias 'yay'='paru'
# alias 'dkr'='docker'
alias 'mksrv'='mkdocs serve -v --dev-addr=0.0.0.0:4444'
alias 'stl'='sudo systemctl'
alias 'paru'='yay'
alias 'k'='kubectl'
alias 'tf'='terraform'
alias 'ts'='tailscale'

# Directories
alias 'cfg'='cd ~/.config'
alias 'sfs'='cd $SYNCFILES'
alias 'bench'='cd /mnt/files/bench_local'
alias 'proj'='cd /mnt/files/Projects'
#alias 'dots'='cd ~/GitIt/SyncFiles/dots'
#alias 'dpr'='cd ~/GitIt/SyncFiles/dotsPr'
#alias 'svs'='cd ~/GitIt/SyncFiles/services'
#alias 'spr'='cd ~/GitIt/SyncFiles/servicesPr'
#alias 'bak'='cd ~/GitIt/SyncFiles/configBak'

# git
alias 'gc'='git clone'
alias 'gst'='git status'
alias 'ga'='git add'
alias 'gcmsg'='git commit -S -m'
alias 'gl'='git pull'
alias 'gp'='git push'

# Rarely used (yt-dl, fastboot etc)
alias 'yt'='yt-dlp'
alias 'ytb'='yt-dlp -f "bestvideo+bestaudio"'
alias 'sf'='sudo fastboot'
alias 'mirrors'='sudo reflector --latest 50 --protocol http --protocol https --sort rate --save /etc/pacman.d/mirrorlist'


#################################################KEYBINDS###################################
bindkey "^a" "beginning-of-line"
bindkey "^e" "end-of-line"
bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word

#################################################FUNCTIONS###################################

# Docker ps
function dkr () {
  if [[ "$@" == "ps -a" ]]; then
    command docker ps --all --format "table {{.Names}}\t{{.ID}}\t{{.Image}}\t{{.RunningFor}}\t{{.Status}}\t{{.State}}\t{{.Ports}}" \
    | (read -r; printf "%s\n" "$REPLY"; sort -k 1 )
  elif [[ "$@" == "ps" ]]; then
    command docker ps --format "table {{.Names}}\t{{.ID}}\t{{.Image}}\t{{.RunningFor}}\t{{.Status}}\t{{.State}}\t{{.Ports}}" \
    | (read -r; printf "%s\n" "$REPLY"; sort -k 1 )
  else
    command docker "$@"
  fi
}

# Create directory with docker-compose.yml, deploy.sh file with chmod +x and README.md
# You need templates already in .config so symlink them via dotfiles repo
function dkdir () {
  command mkdir -p "$1" "$BAK_CFG_DIR/$1" && \
  cd $1 && \
  cp -r ~/.config/templates/docker/compose/. . && \
  cp -r ~/.config/templates/docker/env/. "$BAK_CFG_DIR/$1/" && \
  sed -i "s/serviceName/$1/" ./docker-compose.yml ./deploy.sh && \
  chmod +x deploy.sh && \
  ls -la
}

# Create directory; cd into it; ls dir
#function mkdir () {
#  command mkdir -pv "$1" && \
#  cd $1 && \
#  ls -la
#}
#
# credit: https://gist.github.com/kallmanation/2027bb23242e59cb90141c803ffe2703
mkcd()
{
  mkdir -pv "$@" 2> >(sed s/mkdir/mcd/ 1>&2) && \
  cd "$_" && \
  ls -al;
}

## From DT's gitlab
### Function extract for common file formats ###
SAVEIFS=$IFS
IFS=$(echo -en "\n\b")

function extract {
if [ -z "$1" ]; then
    # display usage if no parameters given
    echo "Usage: extract <path/file_name>.<zip|rar|bz2|gz|tar|tbz2|tgz|Z|7z|xz|ex|tar.bz2|tar.gz|tar.xz>"
    echo "       extract <path/file_name_1.ext> [path/file_name_2.ext] [path/file_name_3.ext]"
else
    for n in "$@"
    do
      if [ -f "$n" ] ; then
          case "${n%,}" in
            *.cbt|*.tar.bz2|*.tar.gz|*.tar.xz|*.tbz2|*.tgz|*.txz|*.tar)
                        tar xvf "$n"       ;;
            *.lzma)      unlzma ./"$n"      ;;
            *.bz2)       bunzip2 ./"$n"     ;;
            *.cbr|*.rar)       unrar x -ad ./"$n" ;;
            *.gz)        gunzip ./"$n"      ;;
            *.cbz|*.epub|*.zip)       unzip ./"$n"       ;;
            *.z)         uncompress ./"$n"  ;;
            *.7z|*.arj|*.cab|*.cb7|*.chm|*.deb|*.dmg|*.iso|*.lzh|*.msi|*.pkg|*.rpm|*.udf|*.wim|*.xar)
                        7z x ./"$n"        ;;
            *.xz)        unxz ./"$n"        ;;
            *.exe)       cabextract ./"$n"  ;;
            *.cpio)      cpio -id < ./"$n"  ;;
            *.cba|*.ace)      unace x ./"$n"      ;;
            *)
                        echo "extract: '$n' - unknown archive method"
                        return 1
                        ;;
          esac
      else
          echo "'$n' - file does not exist"
          return 1
      fi
    done
fi
}

IFS=$SAVEIFS

## From Christitus
# Nala alias to apt
# Add it to root's bash too
apt() { 
  command nala "$@"
}
sudo() {
  if [ "$1" = "apt" ]; then
    shift
    command sudo nala "$@"
  else
    command sudo "$@"
  fi
}
